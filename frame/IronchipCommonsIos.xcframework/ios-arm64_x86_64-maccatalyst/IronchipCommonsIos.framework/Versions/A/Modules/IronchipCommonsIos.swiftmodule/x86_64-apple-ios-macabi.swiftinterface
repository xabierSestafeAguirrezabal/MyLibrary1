// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios15.4-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name IronchipCommonsIos
import SystemConfiguration.CaptiveNetwork
import CoreLocation
import Foundation
@_exported import IronchipCommonsIos
import NetworkExtension
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class GPS : UIKit.UIViewController, CoreLocation.CLLocationManagerDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func getCoordinates() -> CoreLocation.CLLocationCoordinate2D?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class Signals : ObjectiveC.NSObject {
  public func getWiFiBSSID() -> Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
public class Device {
  public init()
  public func modelName() -> Swift.String
  public func model() -> Swift.String
  public func name() -> Swift.String
  public func systemName() -> Swift.String
  public func systemVersion() -> Swift.String
  public func description() -> Swift.String
  public func uuid() -> Swift.String?
  public func isEmulated() -> Swift.Bool
  public func isDeviceJailbrokened() -> Swift.Bool
  public func isCydiaAppInstalled() -> Swift.Bool
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class REST : ObjectiveC.NSObject {
  public func getRequest(_ url: Swift.String?, headers: [Swift.String : Swift.String]?) -> Foundation.Data?
  public func postRequest(_ url: Swift.String?, data: Foundation.Data?, headers: [Swift.String : Swift.String]) -> Foundation.Data?
  @objc override dynamic public init()
  @objc deinit
}
